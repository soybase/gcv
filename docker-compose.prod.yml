services:
  client:
    build:
      context: client
      args:
        GCV_SUB_URI: '${GCV_SUB_URI:-/}'
    environment:
      GCV_SUB_URI: '${GCV_SUB_URI:-/}'
    ports:
      - "${GCV_PORT:-80}:80"
    depends_on:
      - chromosome_region
      - search
      - server
    restart: always
    healthcheck:
      test: "nc -z localhost 80"
    command: >
      sh -c 'while ! nc -z chromosome_region 8080; do sleep 1; done &&
             while ! nc -z search 8080; do sleep 1; done &&
             while ! nc -z server 8000; do sleep 1; done &&
             exec nginx -g "daemon off;"'

  server:
    build: server
    environment:
      ALLOWED_HOSTS: '*'
      DEBUG: '0'
      PGDATABASE: postgres
      PGHOST: /run/postgresql
      PGNAME: postgres
      PGUSER: postgres
    depends_on:
      db:
        condition: service_healthy
    restart: always
    healthcheck:
      test: "nc -z localhost 8000"
    command: >
      sh -c 'while ! nc -z local:/run/postgresql/.s.PGSQL.5432; do sleep 1; done &&
             exec gunicorn --bind 0.0.0.0:8000 server.wsgi'
    volumes:
      - postgres-sock:/run/postgresql

  db:
    build: db
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: "pg_isready -U postgres || exit 1"
      retries: 10
    restart: always
    command: -c listen_addresses=''
    volumes:
      - postgres-sock:/run/postgresql

  redisearch:
    image: redislabs/redisearch:1.6.13
    healthcheck:
      test: "redis-cli ping"
    restart: always

  chado_to_redisearch:
    build: search/database 
    depends_on:
      db:
        condition: service_healthy
      redisearch:
        condition: service_healthy
    # load redisearch from chado only once
    restart: on-failure
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST: /run/postgresql
      REDIS_HOST: redisearch
    command:
      - --no-reload
    volumes:
      - postgres-sock:/run/postgresql

  gene_search:
    build: search/microservices/gene_search
    depends_on:
      - chado_to_redisearch
    restart: always
    environment:
      REDIS_HOST: redisearch
    expose:
      - "8081"
    healthcheck:
      test: ["CMD", "bash", "-c", "(echo -n > /dev/tcp/localhost/8081) 2>/dev/null"]
    entrypoint: >
      bash -c 'while ! (echo -n > /dev/tcp/redisearch/6379) 2>/dev/null; do sleep 1; done &&
               exec python3 microservice.py --no-http'


  chromosome_search:
    build: search/microservices/chromosome_search
    depends_on:
      - chado_to_redisearch
    restart: always
    environment:
      REDIS_HOST: redisearch
      GRPC_HOST: "0.0.0.0"
    expose:
      - "8081"
    healthcheck:
      test: ["CMD", "bash", "-c", "(echo -n > /dev/tcp/localhost/8081) 2>/dev/null"]
    entrypoint: >
      bash -c 'while ! (echo -n > /dev/tcp/redisearch/6379) 2>/dev/null; do sleep 1; done &&
               exec python3 microservice.py --no-http'


  chromosome_region:
    build: search/microservices/chromosome_region
    depends_on:
      - chado_to_redisearch
    restart: always
    environment:
      HTTP_HOST: "0.0.0.0"
      REDIS_HOST: redisearch
      GRPC_HOST: "0.0.0.0"
    healthcheck:
      test: ["CMD", "bash", "-c", "(echo -n > /dev/tcp/localhost/8080) 2>/dev/null"]
    expose:
      - "8080"
      - "8081"
    entrypoint: >
      bash -c 'while ! (echo -n > /dev/tcp/redisearch/6379) 2>/dev/null; do sleep 1; done &&
               exec python3 microservice.py'

  search:
    build: search/microservices/search
    depends_on:
      - gene_search
      - chromosome_search
      - chromosome_region
    restart: always
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "bash", "-c", "(echo -n > /dev/tcp/localhost/8080) 2>/dev/null"]
    environment:
#     GRPC_VERBOSITY: 'debug'
#     GRPC_TRACE: 'all'
      HTTP_HOST: "0.0.0.0"
      GENE_SEARCH_ADDR: gene_search:8081
      CHROMOSOME_SEARCH_ADDR: chromosome_search:8081
      CHROMOSOME_REGION_ADDR: chromosome_region:8081
    entrypoint: >
      bash -c 'while ! (echo -n > /dev/tcp/gene_search/8081) 2>/dev/null; do sleep 1; done &&
               while ! (echo -n > /dev/tcp/chromosome_search/8081) 2>/dev/null; do sleep 1; done &&
               while ! (echo -n > /dev/tcp/chromosome_region/8081) 2>/dev/null; do sleep 1; done &&
               exec python3 microservice.py --no-grpc'

volumes:
  postgres-sock:
