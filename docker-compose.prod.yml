version: '2.4'

services:
  client:
    build:
      context: client
      args:
        GCV_SUB_URI: '${GCV_SUB_URI:-/}'
    ports:
      - "${GCV_PORT:-80}:80"
    depends_on:
      - server
    restart: always

  server:
    build: server
    environment:
      ALLOWED_HOSTS: '*'
      DEBUG: '0'
      GCV_SUB_URI: '/'
      PGDATABASE: postgres
      PGHOST: db
      PGNAME: postgres
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      PGPORT: 5432
      PGUSER: postgres
      SECRET_KEY:
    depends_on:
      db:
        condition: service_healthy
    restart: always
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "server.wsgi"]

  db:
    build: db
    environment:
      POSTGRES_PASSWORD:
    healthcheck:
      test: "pg_isready -U postgres -h 127.0.0.1 || exit 1"
      retries: 10
    restart: always

  redisearch:
    image: redislabs/redisearch:1.6.13
    healthcheck:
      test: "redis-cli ping"
    restart: always

  chado_to_redisearch:
    build: search/database 
    depends_on:
      db:
        condition: service_healthy
      redisearch:
        condition: service_healthy
    # load redisearch from chado only once
    restart: on-failure
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      REDIS_HOST: redisearch
    command:
      - --no-reload

  gene_search:
    build: search/microservices/gene_search
    depends_on:
      - chado_to_redisearch
    restart: always
    environment:
      REDIS_HOST: redisearch
    expose:
      - "8081"
    command:
      - --no-http


  chromosome_search:
    build: search/microservices/chromosome_search
    depends_on:
      - chado_to_redisearch
    restart: always
    environment:
      REDIS_HOST: redisearch
      GRPC_HOST: "0.0.0.0"
    expose:
      - "8081"
    command:
      - --no-http


  chromosome_region:
    build: search/microservices/chromosome_region
    depends_on:
      - chado_to_redisearch
    restart: always
    environment:
      HTTP_HOST: "0.0.0.0"
      REDIS_HOST: redisearch
      GRPC_HOST: "0.0.0.0"
    expose:
      - "8080"
      - "8081"

  search:
    build: search/microservices/search
    depends_on:
      - gene_search
      - chromosome_search
      - chromosome_region
    restart: always
    expose:
      - "8080"
    environment:
#     GRPC_VERBOSITY: 'debug'
#     GRPC_TRACE: 'all'
      HTTP_HOST: "0.0.0.0"
      GENE_SEARCH_ADDR: gene_search:8081
      CHROMOSOME_SEARCH_ADDR: chromosome_search:8081
      CHROMOSOME_REGION_ADDR: chromosome_region:8081
    command:
      - --no-grpc
